{"pagename":"Second Complete Attempt","author":{"image":"assets/dp1.png","name":" Aditya Agarwal","title":"Second Complete Attempt"},"uniqueTag":"second","topics":["Introduction","Second Attempt","Prerequisites","Examples","Experiments","Conclusion"],"content":"<ul class=\"blog-paragraphs\">\n\n\t\t\t\t\t<li role=\"intro\">\n\t\t\t\t\t\t<h2 class=\"heading\">\n\t\t\t\t\t\t\tExample: Horizontal And Vertical Centering (Or The Holy Grail Of Web Design) \n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<p class=\"info-text\">\n\t\t\t\t\t\t\t<span class=\"emphasise\">Flexible box layout</span>\n\n\t\t\t\t\t\t\t(or flexbox) is a new box model optimized for UI layout. As one of the first CSS modules designed for actual layout (floats were really meant mostly for things such as wrapping text around images), it makes a lot of tasks much easier, or even possible at all.\n\n\t\t\t\t\t\t\t<a href=\"#\" class=\"hyperlink txt-green\">Flexbox's repertoire</a>\n\n\t\t\t\t\t\t\tincludes the simple centering of elements (both horizontally and vertically), the expansion and contraction of elements to fill available space, and source-code independent layout, among others abilities.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div class=\"support-image\">\n\t\t\t\t\t\t\t<img src=\"assets/dp2.jpg\" class=\"border z-depth-1\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"quoted-text\">\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tThe usage of flexbox is very easy in the sense that you can finally align content vertically The usage of flexbox is very easy in the sense that you can finally align content vertically\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<pre class=\"codebox bg-dk-purple\"><code>.quoted-text > p {\n\t\t\t\t\t\t\t\t/*width: 80%;*/\n\t\t\t\t\t\t\t\tmargin: 0px;\n\t\t\t\t\t\t\t\ttext-align: center;\n\t\t\t\t\t\t\t\tline-height: 40px;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</code></pre>\n\t\t\t\t\t\t<pre class=\"codebox bg-dk-purple\">\n\t\t\t\t\t\t<code>function Panel(element, canClose, closeHandler) {\n\t\t\t\t\t\t  this.element = element;\n\t\t\t\t\t\t  this.canClose = canClose;\n\t\t\t\t\t\t  this.closeHandler = function () { if (closeHandler) closeHandler() };\n\t\t\t\t\t\t}</code></pre>\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<div class=\"codepen\">\n\t\t\t\t\t\t\t<!-- <iframe id=\"result-iframe\" sandbox=\"allow-scripts allow-pointer-lock allow-same-origin allow-popups allow-modals allow-forms\" src=\"http://codepen.io/chriscoyier/embed/gfdDu&amp;animations=run\" allowtransparency=\"true\" frameborder=\"0\" scrolling=\"yes\" allowfullscreen=\"true\" name=\"CodePen Preview for Progress Steps\" title=\"CodePen Preview for Progress Steps\"></iframe>\t -->\n\t\t\t\t\t\t\t<iframe height='265' scrolling='no' src='http://codepen.io/winkerVSbecks/embed/RWxXpE/?height=265&theme-id=0&default-tab=html,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'>See the Pen <a href='http://codepen.io/winkerVSbecks/pen/RWxXpE/'>Monument Valley in Space for blog post</a> by Varun Vachhar (<a href='http://codepen.io/winkerVSbecks'>@winkerVSbecks</a>) on <a href='http://codepen.io'>CodePen</a>.</iframe>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<!-- I think for local view src has to be added with http but on server it will be running without it (phew !) -->\t\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</li>\n\t\t\t\t\t<!-- First portion of blog completes -->\n\n\t\t\t\t</ul>"}